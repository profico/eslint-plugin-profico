import { Injectable } from '@nestjs/common';
import { InjectModel } from '@nestjs/sequelize';
import { FindAttributeOptions, Order } from 'sequelize/types';
import { CustomLoggerService } from '@app/custom-logger';
import { Food } from '@app/database/models';
import {
  NAME_SORT_COLUMN,
  NAME_EN_SORT_COLUMN,
  SortDirection,
  VinifyLang,
  ID_NAME_IMAGE_ATTRIBUTES,
  ID_NAME_ENG_IMAGE_ATTRIBUTES,
  ReadFoodDto,
} from '@app/globals';

@Injectable()
export class FoodService {
  constructor(
    @InjectModel(Food) private readonly foodRepo: typeof Food,
    private readonly customLogger: CustomLoggerService,
  ) {}

  public async findAll(lang: VinifyLang): Promise<ReadFoodDto[]> {
    const order = this.getSortOrder(lang);

    const attributes = this.getAttributes(lang);

    try {
      const food = await this.foodRepo.findAll({
        attributes,
        order,
        raw: true,
      });

      return food;
    } catch (error) {
      this.customLogger.error(error);

      return [];
    }
  }

  private getSortOrder(lang: VinifyLang): Order {
    return [
      [
        lang === VinifyLang.NO ? NAME_SORT_COLUMN : NAME_EN_SORT_COLUMN,
        SortDirection.ASC,
      ],
    ];
  }

  private getAttributes(lang: VinifyLang): FindAttributeOptions {
    return lang === VinifyLang.NO
      ? ID_NAME_IMAGE_ATTRIBUTES
      : ID_NAME_ENG_IMAGE_ATTRIBUTES;
  }
}
